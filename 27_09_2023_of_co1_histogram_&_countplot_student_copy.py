# -*- coding: utf-8 -*-
"""27/09/2023 of CO1-Histogram & Countplot-Student Copy

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MJlpqvx5NF-8ILPE2YKx1Qd2LAFpnZx4

#### Activity 1: Create Customized Line plots.

Given the dataset of the average annual salary (in dollars) of developers of various programming languages. Create customized line plots to compare the salary variations **Age-wise** for **Python** developer with **Javascript** developer.

**Link to the Dataset**: https://raw.githubusercontent.com/CoreyMSchafer/code_snippets/master/Python/Matplotlib/10-Subplots/data.csv
"""



# Step 1: Import necessary modules to create dataframe and line plots
# Step 2: Create a Dataframe and store it in a variable from the given dataset
# Print the first 5 rows in the DataFram
import numpy as np
import pandas as ps
import matplotlib.pyplot as plt

sal_df=ps.read_csv('https://raw.githubusercontent.com/CoreyMSchafer/code_snippets/master/Python/Matplotlib/10-Subplots/data.csv')
sal_df.head()

# Step 3: Create a customised line plot for comparing the Age-wise annual salary variations for Python developer with JavaScript developer.  Use the 'seaborn-dark' style

plt.style.use("seaborn-dark")
plt.figure(figsize=(10,5))
plt.plot(sal_df['Python'], 'r--*' ,label="python Programmer")
plt.plot(sal_df['JavaScript'], 'g-->' ,label="js programmer")
plt.title("Age-Wise annual Salary")
plt.xlabel("Python programming")
plt.ylabel("JS Programming")
plt.legend()
plt.show()

"""**Q**: What can you conclude from the above comparison ?

**A**:

#### Activity 2.1: Create a Pandas DataFrame

Create a Pandas DataFrame by using the below link which has the dataset of Tips taken on the total bill amount in restaurants in the CSV format:

**Dataset Link** : https://raw.githubusercontent.com/jiss-github123/tips/main/tips.csv

Also, print the first five rows of the dataset.
"""

# Create a pandas DataFrame
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

tip_df=pd.read_csv('https://raw.githubusercontent.com/jiss-github123/tips/main/tips.csv');
tip_df.head()

"""#### Activity 2.2: Create a Gender wise Count plot

Create a gender wise count plot by using the values in the `sex` column.
"""

# Gender wise count plot for the 'sex' values in the 'tip_df' DataFrame on the x-axis.
import seaborn as sms
plt.style.use("ggplot")
plt.figure(figsize=(10,5))
plt.title("Gender Wise count")
sms.countplot(x="sex",data=tip_df)
plt.xlabel("count")
plt.ylabel("no of")
plt.grid()
plt.show()

"""So according to the above count plot, the number of `Female` is less than the number of `Male` in the dataset.

**Q** : Which gender is recorded more in the dataset ?

**A** :

#### Activity 3: Histogram using `hist()` Function

Given a list of random age of 100 individuals in a range between 1 and 91. Write a code to visualise the values in the list using a histogram.

```
age_list = [1,1,2,3,3,5,7,8,9,10,
     10,11,11,13,13,15,16,17,18,18,
     18,19,20,21,21,23,24,24,25,25,
     25,25,26,26,26,27,27,27,27,27,
     29,30,30,31,33,34,34,34,35,36,
     36,37,37,38,38,39,40,41,41,42,
     43,44,45,45,46,47,48,48,49,50,
     51,52,53,54,55,55,56,57,58,60,
     61,63,64,65,66,68,70,71,72,74,
     75,77,81,83,84,87,89,90,90,91
     ]
```

**Steps to Follow**:

1. Import the `matplotlib.pyplot` module.

2. Set the size of the plot using the `figsize` attribute of the `figure()` function.

3. Pass the `age_list` list inside the `hist()` function and set `bins = 10`.

4. Display the histogram using the `show()` function of the `matplotlib.pyplot` module.
"""

# @title Default title text

# Import the 'matplotlib.pyplot' module.
# Set the size of the plot using the 'figsize' attribute of the 'figure()' function
# Pass the 'age_list' list inside the 'hist()' function and set 'bins = 10'.
# Display the histogram using the 'show()' function of the 'matplotlib.pyplot' module.
age_list = [1,1,2,3,3,5,7,8,9,10,
     10,11,11,13,13,15,16,17,18,18,
     18,19,20,21,21,23,24,24,25,25,
     25,25,26,26,26,27,27,27,27,27,
     29,30,30,31,33,34,34,34,35,36,
     36,37,37,38,38,39,40,41,41,42,
     43,44,45,45,46,47,48,48,49,50,
     51,52,53,54,55,55,56,57,58,60,
     61,63,64,65,66,68,70,71,72,74,
     75,77,81,83,84,87,89,90,90,91
     ]
import seaborn as sms
import matplotlib.pyplot as plt
plt.style.use("seaborn")
plt.figure(figsize=(10,5))
plt.title("Histogram")
plt.hist(age_list,bins=15)

plt.show()

"""**Activity 4: Lineplot using plot() Function**"""

"""
Draw a line in a diagram from position (1, 3) to (2, 10) then to (6, 12) and finally to position
(18, 20). (Mark each point with a beautiful green colour and set line colour to red and line style
dotted)
"""
import matplotlib.pyplot as plt
import numpy as np

x = np.array([1,2,6,18])
y = np.array([3,10,12,20])
plt.figure(figsize=(10,5))
plt.plot(x,y,marker='o' ,color='red',mec='g',mfc='g',linestyle='dotted')
# plt.xlabel()
# plt.ylabel()
plt.show()

"""
Draw a plot for the following data:

Temperature in degree Celsius ,  Sales

        12                       100
        14                       200
        16                       250
        18                       400
        20                       300
        22                       450
        24                       500

"""
import matplotlib.pyplot as plt
import numpy as np
x = np.array([12,14,16,18,20,22,24])
y = np.array([100,200,250,400,300,450,500])
plt.figure(figsize=(10,5))
plt.plot(x,y,marker='o' ,color='red',mec='g',mfc='g',linestyle='dotted')
plt.show()

"""#### Activity 5: Bar graph using `bar()` Function"""

"""
Consider the following data.
Programming languages: Java  Python  PHP  JavaScript  C#  C++
Popularity             22.2  17.6    8.8  8           7.7  6.7

(i) Write a Python programming to display a bar chart
    of the popularity of programming Languages.

"""

data = {"java":22.2,"python":17.6,"javascript":8,"C#":7.7,"c++":6.7}
data.items()
courses = list(data.keys())
values=list(data.values())
plt.figure(figsize=(10,5))
plt.bar(courses,values,color="maroon",width=0.4,edgecolor="white")
plt.xlabel("Programming Languages")
plt.ylabel("Popularity")
plt.title("Popularity of Programming Languages")
plt.show()

"""#### Activity 6: Piechart using `pie()` Function"""

"""
Write a Python programming to create a pie chart
   of the popularity of programming Languages.

Programming languages: Java Python PHP JavaScript C# C++
Popularity           : 22.2 17.6   8.8 8          7.7 6.7

"""
data = {"java":22.2,"Python":17.6,"PHP":8.8,"Javascript":8,"c#":7.7,"c++":6.7}
values = list(data.values())
key=list(data.keys())
plt.pie(values,labels=key,shadow=True)
plt.show()